{"version":3,"sources":["components/Carousel.tsx","App.tsx","index.tsx"],"names":["Carousel","state","currentItemIndex","getIndex","url","substring","length","handleButton","step","setState","prev","this","props","images","frameSize","itemWidth","animationDuration","className","style","width","map","image","transition","transform","src","alt","type","onClick","Component","App","htmlFor","id","value","min","max","onChange","event","target","React","ReactDOM","render","document","getElementById"],"mappings":"uPAeMA,E,4MACJC,MAAQ,CACNC,iBAAkB,G,EAGpBC,SAAW,SAACC,GACV,OAAOA,EAAIC,UAAU,EAAGD,EAAIE,OAAS,I,EAGvCC,aAAe,SAACC,GAAD,OAAkB,WAC/B,EAAKC,UAAS,SAACC,GAAD,MAAW,CACvBR,iBAAkBQ,EAAKR,iBAAmBM,Q,4CAI9C,WAAU,IAAD,OACP,EAMIG,KAAKC,MALPJ,EADF,EACEA,KACAK,EAFF,EAEEA,OACAC,EAHF,EAGEA,UACAC,EAJF,EAIEA,UACAC,EALF,EAKEA,kBAGMd,EAAqBS,KAAKV,MAA1BC,iBAER,OACE,sBACEe,UAAU,WACVC,MAAO,CACLC,MAAM,GAAD,OAAKJ,EAAYD,EAAjB,OAHT,UAME,oBAAIG,UAAU,iBAAd,SACGJ,EAAOO,KAAI,SAACC,GAAD,OACV,oBAEEH,MAAO,CACLI,WAAW,GAAD,OAAKN,EAAL,MACVO,UAAU,cAAD,QAAiBrB,EAAmBa,EAApC,QAJb,SAOE,qBACEE,UAAU,kBACVO,IAAKH,EACLI,IAAK,EAAKtB,SAASkB,GACnBF,MAAOJ,KAVJ,EAAKZ,SAASkB,SAgBzB,wBACEK,KAAK,SACLC,QAAShB,KAAKJ,cAAcC,GAF9B,kBAOA,wBACEkB,KAAK,SACL,UAAQ,OACRT,UAAU,OACVU,QAAShB,KAAKJ,aAAaC,GAJ7B,yB,GA3DeoB,aCHjBC,E,4MACJ5B,MAAQ,CACNY,OAAQ,CACN,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,gBAEFL,KAAM,EACNM,UAAW,EACXC,UAAW,IACXC,kBAAmB,K,4CAGrB,WAAU,IAAD,OACP,EAMIL,KAAKV,MALPY,EADF,EACEA,OACAL,EAFF,EAEEA,KACAM,EAHF,EAGEA,UACAC,EAJF,EAIEA,UACAC,EALF,EAKEA,kBAGF,OACE,sBAAKC,UAAU,MAAf,UAEE,qBAAI,UAAQ,QAAZ,2BAAmCJ,EAAOP,OAA1C,aAEA,cAAC,EAAD,CACEO,OAAQA,EACRL,KAAMA,EACNM,UAAWA,EACXC,UAAWA,EACXC,kBAAmBA,IAGrB,wBACEc,QAAQ,SACRb,UAAU,aAFZ,wBAKE,uBACEc,GAAG,SACHL,KAAK,SACLM,MAAOjB,EACPkB,IAAK,IACLC,IAAK,IACL1B,KAAM,GACN2B,SAAU,SAACC,GACT,EAAK3B,SAAS,CACZM,WAAYqB,EAAMC,OAAOL,cAMjC,wBACEF,QAAQ,UACRb,UAAU,aAFZ,wBAKE,uBACEc,GAAG,UACHL,KAAK,SACLM,MAAOlB,EACPmB,IAAK,EACLC,IAAK,GACL1B,KAAM,EACN2B,SAAU,SAACC,GACT,EAAK3B,SAAS,CACZK,WAAYsB,EAAMC,OAAOL,cAMjC,wBACEF,QAAQ,SACRb,UAAU,aAFZ,kBAKE,uBACEc,GAAG,SACHL,KAAK,SACLM,MAAOxB,EACPyB,IAAK,EACLC,IAAK,GACL1B,KAAM,EACN2B,SAAU,SAACC,GACT,EAAK3B,SAAS,CACZD,MAAO4B,EAAMC,OAAOL,cAM5B,wBACEF,QAAQ,aACRb,UAAU,aAFZ,gCAKE,uBACEc,GAAG,aACHL,KAAK,SACLM,MAAOhB,EACPiB,IAAK,EACLC,IAAK,IACL1B,KAAM,IACN2B,SAAU,SAACC,GACT,EAAK3B,SAAS,CACZO,mBAAoBoB,EAAMC,OAAOL,qB,GApH/BM,IAAMV,WA8HTC,ICvIfU,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.43dd2287.chunk.js","sourcesContent":["import { Component } from 'react';\nimport './Carousel.scss';\n\ntype State = {\n  currentItemIndex: number,\n};\n\ntype Props = {\n  images: string[],\n  step: number,\n  frameSize: number,\n  itemWidth: number,\n  animationDuration: number,\n};\n\nclass Carousel extends Component<Props, State> {\n  state = {\n    currentItemIndex: 0,\n  };\n\n  getIndex = (url: string) => {\n    return url.substring(6, url.length - 4);\n  };\n\n  handleButton = (step: number) => () => {\n    this.setState((prev) => ({\n      currentItemIndex: prev.currentItemIndex + step,\n    }));\n  };\n\n  render() {\n    const {\n      step,\n      images,\n      frameSize,\n      itemWidth,\n      animationDuration,\n    } = this.props;\n\n    const { currentItemIndex } = this.state;\n\n    return (\n      <div\n        className=\"Carousel\"\n        style={{\n          width: `${itemWidth * frameSize}px`,\n        }}\n      >\n        <ul className=\"Carousel__list\">\n          {images.map((image) => (\n            <li\n              key={this.getIndex(image)}\n              style={{\n                transition: `${animationDuration}ms`,\n                transform: `translateX(${-currentItemIndex * itemWidth}px)`,\n              }}\n            >\n              <img\n                className=\"Carousel__image\"\n                src={image}\n                alt={this.getIndex(image)}\n                width={itemWidth}\n              />\n            </li>\n          ))}\n        </ul>\n\n        <button\n          type=\"button\"\n          onClick={this.handleButton(-step)}\n        >\n          Prev\n        </button>\n\n        <button\n          type=\"button\"\n          data-cy=\"next\"\n          className=\"next\"\n          onClick={this.handleButton(step)}\n        >\n          Next\n        </button>\n\n      </div>\n    );\n  }\n}\n\nexport { Carousel };\n","import React from 'react';\nimport './App.scss';\nimport { Carousel } from './components/Carousel';\n\ntype State = {\n  images: string[],\n  step: number,\n  frameSize: number,\n  itemWidth: number,\n  animationDuration: number,\n};\n\nclass App extends React.Component<{}, State> {\n  state = {\n    images: [\n      './img/1.png',\n      './img/2.png',\n      './img/3.png',\n      './img/4.png',\n      './img/5.png',\n      './img/6.png',\n      './img/7.png',\n      './img/8.png',\n      './img/9.png',\n      './img/10.png',\n    ],\n    step: 3,\n    frameSize: 3,\n    itemWidth: 130,\n    animationDuration: 1000,\n  };\n\n  render() {\n    const {\n      images,\n      step,\n      frameSize,\n      itemWidth,\n      animationDuration,\n    } = this.state;\n\n    return (\n      <div className=\"App\">\n        {/* eslint-disable-next-line */}\n        <h1 data-cy=\"title\">Carousel with {images.length} images</h1>\n\n        <Carousel\n          images={images}\n          step={step}\n          frameSize={frameSize}\n          itemWidth={itemWidth}\n          animationDuration={animationDuration}\n        />\n\n        <label\n          htmlFor=\"itemId\"\n          className=\"App__label\"\n        >\n          Item Width:\n          <input\n            id=\"itemId\"\n            type=\"number\"\n            value={itemWidth}\n            min={130}\n            max={260}\n            step={10}\n            onChange={(event) => {\n              this.setState({\n                itemWidth: +event.target.value,\n              });\n            }}\n          />\n        </label>\n\n        <label\n          htmlFor=\"frameId\"\n          className=\"App__label\"\n        >\n          Frame Size:\n          <input\n            id=\"frameId\"\n            type=\"number\"\n            value={frameSize}\n            min={1}\n            max={10}\n            step={1}\n            onChange={(event) => {\n              this.setState({\n                frameSize: +event.target.value,\n              });\n            }}\n          />\n        </label>\n\n        <label\n          htmlFor=\"stepId\"\n          className=\"App__label\"\n        >\n          Step:\n          <input\n            id=\"stepId\"\n            type=\"number\"\n            value={step}\n            min={1}\n            max={10}\n            step={1}\n            onChange={(event) => {\n              this.setState({\n                step: +event.target.value,\n              });\n            }}\n          />\n        </label>\n\n        <label\n          htmlFor=\"durationId\"\n          className=\"App__label\"\n        >\n          Animation Duration:\n          <input\n            id=\"durationId\"\n            type=\"number\"\n            value={animationDuration}\n            min={0}\n            max={50000}\n            step={500}\n            onChange={(event) => {\n              this.setState({\n                animationDuration: +event.target.value,\n              });\n            }}\n          />\n        </label>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}