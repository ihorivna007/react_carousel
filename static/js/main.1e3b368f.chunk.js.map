{"version":3,"sources":["components/Carousel.tsx","App.tsx","index.tsx"],"names":["Carousel","state","currentItemIndex","getIndex","url","substring","length","handleButton","step","props","frameSize","images","lastIndex","nextIndex","setState","this","itemWidth","animationDuration","className","style","width","animation","map","image","transition","transform","src","alt","type","onClick","disabled","Component","App","htmlFor","id","value","min","max","onChange","event","target","React","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.1e3b368f.chunk.js","sourcesContent":["import { Component } from 'react';\nimport './Carousel.scss';\n\ntype State = {\n  currentItemIndex: number,\n};\n\ntype Props = {\n  images: string[],\n  step: number,\n  frameSize: number,\n  itemWidth: number,\n  animationDuration: number,\n};\n\nclass Carousel extends Component<Props, State> {\n  state = {\n    currentItemIndex: 0,\n  };\n\n  getIndex = (url: string) => {\n    return url.substring(6, url.length - 4);\n  };\n\n  handleButton = (step: number) => () => {\n    const { frameSize, images } = this.props;\n    const { currentItemIndex } = this.state;\n    const lastIndex = images.length - frameSize;\n    const firstIndex = 0;\n    let nextIndex = currentItemIndex + step;\n\n    if (step > 0) {\n      if (currentItemIndex === lastIndex) {\n        nextIndex = firstIndex;\n      } else if (nextIndex > lastIndex) {\n        nextIndex = lastIndex;\n      }\n    }\n\n    if (step < 0) {\n      if (currentItemIndex === firstIndex) {\n        nextIndex = lastIndex;\n      } else if (nextIndex < firstIndex) {\n        nextIndex = firstIndex;\n      }\n    }\n\n    this.setState(() => ({\n      currentItemIndex: nextIndex,\n    }));\n  };\n\n  render() {\n    const {\n      step,\n      images,\n      frameSize,\n      itemWidth,\n      animationDuration,\n    } = this.props;\n\n    const { currentItemIndex } = this.state;\n\n    return (\n      <div\n        className=\"Carousel\"\n        style={{\n          width: `${itemWidth * frameSize}px`,\n          animation: `${animationDuration}ms`,\n        }}\n      >\n        <ul className=\"Carousel__list\">\n          {images.map((image) => (\n            <li\n              key={this.getIndex(image)}\n              style={{\n                transition: `${animationDuration}ms`,\n                transform: `translateX(${-currentItemIndex * itemWidth}px)`,\n              }}\n            >\n              <img\n                className=\"Carousel__image\"\n                src={image}\n                alt={this.getIndex(image)}\n                width={itemWidth}\n              />\n            </li>\n          ))}\n        </ul>\n\n        <div className=\"Carousel__buttons\">\n          <button\n            type=\"button\"\n            className=\"Carousel__button\"\n            onClick={this.handleButton(-step)}\n            disabled={currentItemIndex <= 0}\n          >\n            Prev\n          </button>\n\n          <button\n            type=\"button\"\n            data-cy=\"next\"\n            className=\"Carousel__button next\"\n            disabled={currentItemIndex >= images.length - frameSize}\n            onClick={this.handleButton(step)}\n          >\n            Next\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport { Carousel };\n","import React from 'react';\nimport './App.scss';\nimport { Carousel } from './components/Carousel';\n\ntype State = {\n  images: string[],\n  step: number,\n  frameSize: number,\n  itemWidth: number,\n  animationDuration: number,\n};\n\nclass App extends React.Component<{}, State> {\n  state = {\n    images: [\n      './img/1.png',\n      './img/2.png',\n      './img/3.png',\n      './img/4.png',\n      './img/5.png',\n      './img/6.png',\n      './img/7.png',\n      './img/8.png',\n      './img/9.png',\n      './img/10.png',\n    ],\n    step: 3,\n    frameSize: 3,\n    itemWidth: 130,\n    animationDuration: 1000,\n  };\n\n  render() {\n    const {\n      images,\n      step,\n      frameSize,\n      itemWidth,\n      animationDuration,\n    } = this.state;\n\n    return (\n      <div className=\"App\">\n        {/* eslint-disable-next-line */}\n        <h1 data-cy=\"title\">Carousel with {images.length} images</h1>\n\n        <div className=\"App__labels\">\n          <label\n            htmlFor=\"itemId\"\n            className=\"App__label\"\n          >\n            Item Width:\n            <input\n              id=\"itemId\"\n              type=\"number\"\n              value={itemWidth}\n              min={130}\n              max={260}\n              step={10}\n              onChange={(event) => {\n                this.setState({\n                  itemWidth: +event.target.value,\n                });\n              }}\n            />\n          </label>\n\n          <label\n            htmlFor=\"stepId\"\n            className=\"App__label\"\n          >\n            Step:\n            <input\n              id=\"stepId\"\n              type=\"number\"\n              value={step}\n              min={1}\n              max={10}\n              step={1}\n              onChange={(event) => {\n                this.setState({\n                  step: +event.target.value,\n                });\n              }}\n            />\n          </label>\n\n          <label\n            htmlFor=\"frameId\"\n            className=\"App__label\"\n          >\n            Frame Size:\n            <input\n              id=\"frameId\"\n              type=\"number\"\n              value={frameSize}\n              min={1}\n              max={10}\n              step={1}\n              onChange={(event) => {\n                this.setState({\n                  frameSize: +event.target.value,\n                });\n              }}\n            />\n          </label>\n\n          <label\n            htmlFor=\"durationId\"\n            className=\"App__label\"\n          >\n            Animation Duration:\n            <input\n              id=\"durationId\"\n              type=\"number\"\n              value={animationDuration}\n              min={0}\n              max={50000}\n              step={500}\n              onChange={(event) => {\n                this.setState({\n                  animationDuration: +event.target.value,\n                });\n              }}\n            />\n          </label>\n        </div>\n\n        <Carousel\n          images={images}\n          step={step}\n          frameSize={frameSize}\n          itemWidth={itemWidth}\n          animationDuration={animationDuration}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}